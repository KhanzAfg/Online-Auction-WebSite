@model IEnumerable<OnlineAuction.Models.Auction>

@{
    ViewData["Title"] = "My Auctions";
}

<div class="container mt-4 fade-in">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>My Auctions</h2>
        <a asp-action="SellAuction" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>Create New Auction
        </a>
    </div>

    <div class="card mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-4">
                    <select class="form-select" id="statusFilter">
                        <option value="">All Status</option>
                        <option value="active">Active</option>
                        <option value="ended">Ended</option>
                        <option value="cancelled">Cancelled</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <select class="form-select" id="sortBy">
                        <option value="newest">Newest First</option>
                        <option value="oldest">Oldest First</option>
                        <option value="highest">Highest Bid</option>
                        <option value="lowest">Lowest Bid</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <div class="input-group">
                        <input type="text" class="form-control" id="searchInput" placeholder="Search auctions...">
                        <button class="btn btn-outline-secondary" type="button">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row" id="auctionsList">
        @foreach (var auction in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    <div class="row g-0">
                        <div class="col-md-4">
                            @if (!string.IsNullOrEmpty(auction.Images.FirstOrDefault()?.ImagePath))
                            {
                                <img src="@auction.Images.FirstOrDefault()?.ImagePath" class="img-fluid rounded-start h-100" style="object-fit: cover;" alt="@auction.Title">
                            }
                            else
                            {
                                <div class="bg-light h-100 d-flex align-items-center justify-content-center">
                                    <i class="fas fa-image fa-2x text-muted"></i>
                                </div>
                            }
                        </div>
                        <div class="col-md-8">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h5 class="card-title mb-0">@auction.Title</h5>
                                    <span class="badge @(auction.Status == AuctionStatus.Active ? "bg-success" : 
                                                      auction.Status == AuctionStatus.Ended ? "bg-secondary" : "bg-danger")">
                                        @auction.Status
                                    </span>
                                </div>
                                <p class="card-text text-muted">
                                    <small>Created: @auction.CreatedAt.ToString("g")</small>
                                </p>
                                <div class="mb-3">
                                    <p class="mb-1">
                                        <strong>Current Bid:</strong> 
                                        $@(auction.CurrentBid?.Amount.ToString("F2") ?? auction.StartingPrice.ToString("F2"))
                                    </p>
                                    <p class="mb-1">
                                        <strong>Bids:</strong> @auction.Bids.Count
                                    </p>
                                    <p class="mb-0">
                                        <strong>Ends:</strong> @auction.EndDate.ToString("g")
                                    </p>
                                </div>
                                <div class="d-flex gap-2">
                                    <a asp-action="AuctionDetails" asp-route-id="@auction.Id" 
                                       class="btn btn-outline-primary flex-grow-1">
                                        <i class="fas fa-eye me-2"></i>View
                                    </a>
                                    @if (auction.Status == AuctionStatus.Active)
                                    {
                                        <a asp-action="EditAuction" asp-route-id="@auction.Id" 
                                           class="btn btn-outline-secondary">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <i class="fas fa-gavel fa-3x text-muted mb-3"></i>
            <h4 class="text-muted">No auctions found</h4>
            <p class="text-muted">Start by creating your first auction!</p>
            <a asp-action="SellAuction" class="btn btn-primary mt-3">
                <i class="fas fa-plus me-2"></i>Create New Auction
            </a>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const statusFilter = document.getElementById('statusFilter');
            const sortBy = document.getElementById('sortBy');
            const searchInput = document.getElementById('searchInput');
            const auctionsList = document.getElementById('auctionsList');

            function filterAndSort() {
                const status = statusFilter.value.toLowerCase();
                const sort = sortBy.value;
                const search = searchInput.value.toLowerCase();

                const auctions = Array.from(auctionsList.children);
                
                // Filter
                auctions.forEach(auction => {
                    const auctionStatus = auction.querySelector('.badge').textContent.trim().toLowerCase();
                    const title = auction.querySelector('.card-title').textContent.toLowerCase();
                    const matchesStatus = !status || auctionStatus === status;
                    const matchesSearch = !search || title.includes(search);
                    
                    auction.style.display = matchesStatus && matchesSearch ? 'block' : 'none';
                });

                // Sort
                const visibleAuctions = auctions.filter(a => a.style.display !== 'none');
                visibleAuctions.sort((a, b) => {
                    const aTitle = a.querySelector('.card-title').textContent;
                    const bTitle = b.querySelector('.card-title').textContent;
                    const aDate = new Date(a.querySelector('small').textContent.split(': ')[1]);
                    const bDate = new Date(b.querySelector('small').textContent.split(': ')[1]);
                    const aBid = parseFloat(a.querySelector('.mb-1').textContent.split('$')[1]);
                    const bBid = parseFloat(b.querySelector('.mb-1').textContent.split('$')[1]);

                    switch(sort) {
                        case 'newest':
                            return bDate - aDate;
                        case 'oldest':
                            return aDate - bDate;
                        case 'highest':
                            return bBid - aBid;
                        case 'lowest':
                            return aBid - bBid;
                        default:
                            return 0;
                    }
                });

                // Reorder in DOM
                visibleAuctions.forEach(auction => auctionsList.appendChild(auction));
            }

            statusFilter.addEventListener('change', filterAndSort);
            sortBy.addEventListener('change', filterAndSort);
            searchInput.addEventListener('input', filterAndSort);
        });
    </script>
} 